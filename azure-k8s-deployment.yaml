# --- Only resource sections are changed ---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  namespace: planeet
  labels:
    app: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo
          image: mongo:5
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-storage
              mountPath: /data/db
          env:
            - name: MONGO_INITDB_DATABASE
              value: "planeet"
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
      volumes:   # ðŸ‘ˆ this was missing
        - name: mongo-storage
          persistentVolumeClaim:
            claimName: mongo-pvc


---

# Outing Profile Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: outing-profile-service
  namespace: planeet
spec:
  replicas: 1
  selector:
    matchLabels:
      app: outing-profile-service
  template:
    metadata:
      labels:
        app: outing-profile-service
    spec:
      containers:
        - name: outing-profile-service
          image: nikaklimenchuk/outing-profile-service:v1.7
          ports:
            - containerPort: 5000
          env:
            - name: MONGO_URI
              valueFrom:
                secretKeyRef:
                  name: planeet-secrets
                  key: MONGO_URI
          imagePullPolicy: Always
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"

---

# Users Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users-service
  namespace: planeet
spec:
  replicas: 1
  selector:
    matchLabels:
      app: users-service
  template:
    metadata:
      labels:
        app: users-service
    spec:
      containers:
        - name: users-service
          image: liorberlin/users-service:v3.0
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_DATA_MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: planeet-secrets
                  key: MONGO_URI
            - name: OUTING_PROFILE_SERVICE_BASE_URL
              value: "http://outing-profile-service.planeet.svc.cluster.local"
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"

---

# Planning Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: planning-service
  namespace: planeet
spec:
  replicas: 1
  selector:
    matchLabels:
      app: planning-service
  template:
    metadata:
      labels:
        app: planning-service
    spec:
      containers:
        - name: planning-service
          image: dartoledano/planning-service:v1.0.3
          imagePullPolicy: Always
          ports:
            - containerPort: 8001
          env:
            - name: VENUES_SERVICE_URL
              value: "http://venues-service.planeet.svc.cluster.local:8000"
            - name: OUTING_PROFILE_SERVICE_URL
              value: "http://outing-profile-service.planeet.svc.cluster.local:80"
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"

---

# Venues Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: venues-service
  namespace: planeet
spec:
  replicas: 1
  selector:
    matchLabels:
      app: venues-service
  template:
    metadata:
      labels:
        app: venues-service
    spec:
      containers:
        - name: venues-service
          image: dartoledano/venues-service:v1.4
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
          env:
            - name: GOOGLE_PLACES_API_KEY
              valueFrom:
                secretKeyRef:
                  name: planeet-secrets
                  key: GOOGLE_PLACES_API_KEY
            - name: PLANNING_SERVICE_URL
              value: "http://planning-service.planeet.svc.cluster.local:8001"
            - name: MONGO_URI
              valueFrom:
                secretKeyRef:
                  name: planeet-secrets
                  key: MONGO_URI
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"

---

# UI Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ui-service
  namespace: planeet
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ui-service
  template:
    metadata:
      labels:
        app: ui-service
    spec:
      containers:
        - name: ui-service
          image: nikaklimenchuk/planeet-ui:react-v1.4
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          env:
            - name: ENVIRONMENT
              value: "kubernetes"
            - name: REACT_APP_ENVIRONMENT
              value: "production"
          resources:
            requests:
              memory: "32Mi"
              cpu: "25m"
            limits:
              memory: "64Mi"
              cpu: "50m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress-controller
  namespace: ingress-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-ingress-controller
  template:
    metadata:
      labels:
        app: nginx-ingress-controller
    spec:
      containers:
        - name: nginx-ingress-controller
          image: registry.k8s.io/ingress-nginx/controller:v1.8.1
          args:
            - /nginx-ingress-controller
            - --publish-service=$(POD_NAMESPACE)/nginx-ingress-controller
            - --election-id=ingress-nginx-leader
            - --controller-class=k8s.io/ingress-nginx
            - --ingress-class=nginx
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - containerPort: 80
            - containerPort: 443
          resources:
            requests:
              cpu: "50m"
              memory: "64Mi"
            limits:
              cpu: "100m"
              memory: "128Mi"
